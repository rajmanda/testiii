# Trigger the workflow whenever changes are pushed to the deploy directory
on:
  push:
    paths:
      - 'deploy/**'

jobs:
  checkout-manifests:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository (with full history for diff to work)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch at least two commits to compare

      # Step 2: Get the list of changed files
      - name: Get changed files
        run: |
          echo "Checking for changed files..."
          if git rev-parse --verify HEAD^ >/dev/null 2>&1; then
            echo "Detected previous commit, running git diff HEAD^"
            git diff --name-only HEAD^ HEAD > changed_files.txt
          else
            echo "No previous commit, running git diff HEAD"
            git diff --name-only HEAD > changed_files.txt
          fi
          echo "Changed files:"
          cat changed_files.txt  # Show the contents of the changed_files.txt for debugging
          echo "CHANGED_FILES=$(cat changed_files.txt | tr '\n' ' ')" >> $GITHUB_ENV  # Export changed files to environment variable
          echo "CHANGED_FILES set as: $CHANGED_FILES"  # Print the variable to debug

  deploy:
    runs-on: ubuntu-latest
    needs: checkout-manifests  # Ensure this job runs after the checkout-manifests
    permissions:
      contents: read
      id-token: write  # Make sure this is present
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Authenticate to GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2.0.0
        with:
          workload_identity_provider: 'projects/175415323680/locations/global/workloadIdentityPools/githubpool/providers/github'
          service_account: github-wif-sa@properties-app-418208.iam.gserviceaccount.com

      # Step 3: Set up GKE credentials
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: simple-autopilot-public-cluster
          location: us-central1  # Adjust your cluster zone
          project_id: properties-app-418208

      # Step 4: Deploy to GKE only for changed files
      - name: Deploy to GKE
        run: |
          echo "Deploying changed files..."
          echo "CHANGED_FILES: $CHANGED_FILES"  # Print the CHANGED_FILES variable to debug
          for file in $CHANGED_FILES; do
            echo "Deploying $file"
            kubectl apply -f $file
          done
        env:
          CHANGED_FILES: ${{ env.CHANGED_FILES }}
